{
  "id": "1",
  "name": "AI News Updates Workflow",
  "active": false,
  "nodes": [
    {
      "id": "1",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1,
      "position": [200, 300],
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 1,
              "unit": "day"
            }
          ]
        }
      }
    },
    {
      "id": "2",
      "name": "Fetch OpenAI Updates",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [400, 300],
      "parameters": {
        "url": "https://openai.com/blog",
        "method": "GET",
        "authentication": "none"
      }
    },
    {
      "id": "3",
      "name": "Fetch Anthropic Updates",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [400, 400],
      "parameters": {
        "url": "https://www.anthropic.com/news",
        "method": "GET",
        "authentication": "none"
      }
    },
    {
      "id": "4",
      "name": "Fetch Google AI Updates",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [400, 500],
      "parameters": {
        "url": "https://blog.google/technology/ai/",
        "method": "GET",
        "authentication": "none"
      }
    },
    {
      "id": "5",
      "name": "Fetch HuggingFace Updates",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [400, 600],
      "parameters": {
        "url": "https://huggingface.co/blog",
        "method": "GET",
        "authentication": "none"
      }
    },
    {
      "id": "6",
      "name": "Fetch GitHub AI Updates",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [400, 700],
      "parameters": {
        "url": "https://github.blog/category/technology/ai/",
        "method": "GET",
        "authentication": "none"
      }
    },
    {
      "id": "7",
      "name": "Merge Results",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2,
      "position": [600, 300],
      "parameters": {
        "mode": "append"
      }
    },
    {
      "id": "8",
      "name": "Extract Relevant Content",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [800, 300],
      "parameters": {
        "functionCode": "// Extract relevant content from the HTML responses\nconst items = [];\nfor (const item of $input.all()) {\n  try {\n    const source = item.json.url.includes('openai') ? 'OpenAI' :\n                   item.json.url.includes('anthropic') ? 'Anthropic' :\n                   item.json.url.includes('google') ? 'Google AI' :\n                   item.json.url.includes('huggingface') ? 'HuggingFace' :\n                   item.json.url.includes('github') ? 'GitHub' : 'Other';\n    const html = item.json.data;\n    items.push({ json: { source, rawContent: html, url: item.json.url } });\n  } catch (error) {\n    // Skip errors\n  }\n}\nreturn items;"
      }
    },
    {
      "id": "9",
      "name": "Analyze Updates",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1000, 300],
      "parameters": {
        "functionCode": "const items = $input.all();\nreturn items.map(item => {\n  const snippet = (item.json.rawContent || '').substring(0, 100);\n  return { json: { source: item.json.source, analysis: `Update from ${item.json.source}: ${snippet}...`, url: item.json.url } };\n});"
      }
    },
    {
      "id": "10",
      "name": "Compile Final Report",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1200, 300],
      "parameters": {
        "functionCode": "const items = $input.all();\nlet report = 'AI Updates Report:\\n\\n';\nitems.forEach(item => {\n  report += `${item.json.source} update: ${item.json.analysis}\\nURL: ${item.json.url}\\n\\n`;\n});\nreturn [{ json: { content: report } }];"
      }
    },
    {
      "id": "11",
      "name": "Save to Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 3,
      "position": [1400, 300],
      "parameters": {
        "operation": "append",
        "sheetName": "AI Updates for TypeScript Devs",
        "documentId": "your-google-sheet-id",
        "range": "A:C",
        "valueInputMode": "RAW",
        "dataMode": "autoMap"
      },
      "credentials": {
        "googleSheetsOAuth2Api": "your-google-sheets-oauth2-credentials"
      }
    },
    {
      "id": "12",
      "name": "Send Email with Gmail",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2,
      "position": [1600, 300],
      "parameters": {
        "operation": "sendEmail",
        "subject": "Weekly AI Provider Updates for TypeScript Developers",
        "message": "={{ $node[\"Compile Final Report\"].json.content }}",
        "to": "your-email@gmail.com",
        "options": {
          "attachments": "",
          "htmlMessage": true
        }
      },
      "credentials": {
        "gmailOAuth2Api": "your-gmail-oauth2-credentials"
      }
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          { "node": "Fetch OpenAI Updates", "type": "main", "index": 0 },
          { "node": "Fetch Anthropic Updates", "type": "main", "index": 0 },
          { "node": "Fetch Google AI Updates", "type": "main", "index": 0 },
          { "node": "Fetch HuggingFace Updates", "type": "main", "index": 0 },
          { "node": "Fetch GitHub AI Updates", "type": "main", "index": 0 }
        ]
      ]
    },
    "Fetch OpenAI Updates": {
      "main": [
        [
          { "node": "Merge Results", "type": "main", "index": 0 }
        ]
      ]
    },
    "Fetch Anthropic Updates": {
      "main": [
        [
          { "node": "Merge Results", "type": "main", "index": 0 }
        ]
      ]
    },
    "Fetch Google AI Updates": {
      "main": [
        [
          { "node": "Merge Results", "type": "main", "index": 0 }
        ]
      ]
    },
    "Fetch HuggingFace Updates": {
      "main": [
        [
          { "node": "Merge Results", "type": "main", "index": 0 }
        ]
      ]
    },
    "Fetch GitHub AI Updates": {
      "main": [
        [
          { "node": "Merge Results", "type": "main", "index": 0 }
        ]
      ]
    },
    "Merge Results": {
      "main": [
        [
          { "node": "Extract Relevant Content", "type": "main", "index": 0 }
        ]
      ]
    },
    "Extract Relevant Content": {
      "main": [
        [
          { "node": "Analyze Updates", "type": "main", "index": 0 }
        ]
      ]
    },
    "Analyze Updates": {
      "main": [
        [
          { "node": "Compile Final Report", "type": "main", "index": 0 }
        ]
      ]
    },
    "Compile Final Report": {
      "main": [
        [
          { "node": "Save to Google Sheets", "type": "main", "index": 0 },
          { "node": "Send Email with Gmail", "type": "main", "index": 0 }
        ]
      ]
    }
  },
  "settings": {},
  "staticData": {},
  "createdAt": "2025-03-29T00:00:00.000Z",
  "updatedAt": "2025-03-29T00:00:00.000Z"
}